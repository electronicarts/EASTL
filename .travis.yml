language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  - EASTL_CONFIG=Debug
  - EASTL_CONFIG=Release

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-6
      - g++-6
      - clang
      - libc++-dev

matrix:
    include:
        - compiler: clang "release build with clang to trigger MOJI check"
          env: EASTL_CONFIG=Release USE_MOJI_CHECK=yes
          os: linux
        - compiler: clang "debug build with clang3.9"
          env: EASTL_CONFIG=Debug   USE_CLANG_39=yes
          os: osx
        - compiler: clang "release build with clang3.9"
          env: EASTL_CONFIG=Release USE_CLANG_39=yes
          os: osx
    exclude:
      - os: osx
        compiler: gcc

install:
# MOJI check; exit 1 if non-ascii characters detected in C++
  - if [[ -n "$USE_MOJI_CHECK" && -n `git grep -P "[^[:ascii:]]" source test` ]]; then echo "Moji Detected" && exit 1             ;fi
  - if [[ -n "$USE_MOJI_CHECK" ]]; then exit 0                                                                                    ;fi

# Linux Setup
  # CMake
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget --no-check-certificate http://cmake.org/files/v3.1/cmake-3.1.3-Linux-x86_64.tar.gz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xzf cmake-3.1.3-Linux-x86_64.tar.gz                                                  ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$PWD/cmake-3.1.3-Linux-x86_64/bin:$PATH                                                           ;fi
  # GCC
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CXX" = "g++" ]]; then export CXX="g++-6" CC="gcc-6"                                               ;fi
  # Linuxbrew
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then test -d $HOME/.linuxbrew/bin || git clone https://github.com/Linuxbrew/brew.git $HOME/.linuxbrew  ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then PATH="$HOME/.linuxbrew/bin:$PATH"                                                                 ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo 'export PATH="$HOME/.linuxbrew/bin:$PATH"' >>~/.bash_profile                                 ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export MANPATH="$(brew --prefix)/share/man:$MANPATH"                                              ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export INFOPATH="$(brew --prefix)/share/info:$INFOPATH"                                           ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then brew --version                                                                                    ;fi
  # Linuxbrew GCC
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then brew install gcc               ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then which gcc                      ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then gcc --version                  ;fi

# OSX Setup
  # CMake
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget --no-check-certificate http://cmake.org/files/v3.1/cmake-3.1.3-Darwin-x86_64.tar.gz     ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then tar -xzf cmake-3.1.3-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=$PWD/cmake-3.1.3-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi
  # Clang 3.9
  - if [[ "$TRAVIS_OS_NAME" == "osx" && -n "$USE_CLANG_39" ]]; then export CLANG_URL=http://releases.llvm.org/3.9.0/clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && -n "$USE_CLANG_39" ]]; then wget --no-check-certificate $CLANG_URL                                                        ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && -n "$USE_CLANG_39" ]]; then tar -xzf clang+llvm-3.9.0-x86_64-apple-darwin.tar.xz                                          ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && -n "$USE_CLANG_39" ]]; then export CLANG_39_PATH=$(PWD)/clang+llvm-3.9.0-x86_64-apple-darwin/                             ;fi
  # Homebrew
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then test -d $HOME/.homebrew/bin || git clone https://github.com/Homebrew/brew.git $HOME/.homebrew    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PATH="$HOME/.homebrew/bin:$PATH"                                                                 ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo 'export PATH="$HOME/.homebrew/bin:$PATH"' >>~/.bash_profile                                 ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export MANPATH="$(brew --prefix)/share/man:$MANPATH"                                             ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export INFOPATH="$(brew --prefix)/share/info:$INFOPATH"                                          ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew --version                                                                                   ;fi

# Universal Setup
before_script:
  - if [[ "$CXX" == "clang++" ]]; then export CXXFLAGS="$CXXFLAGS -I${LLVM_ROOT}/install/include -std=c++14 -stdlib=libc++"       ;fi
  - if [[ "$CXX" == "clang++" ]]; then export LDFLAGS="$LDFLAGS -L${LLVM_ROOT}/install/lib"                                       ;fi
  - if [[ -n "$USE_CLANG_39" ]]; then export PATH="${CLANG_39_PATH}/bin:$PATH"                                                    ;fi
  - if [[ -n "$USE_CLANG_39" ]]; then export CC="clang"                                                                           ;fi
  - if [[ -n "$USE_CLANG_39" ]]; then export CXX="clang++"                                                                        ;fi
  - if [[ -n "$USE_CLANG_39" ]]; then export CXXFLAGS="$CXXFLAGS -I${CLANG_39_PATH}/include -std=c++14 -stdlib=libc++"            ;fi
  - if [[ -n "$USE_CLANG_39" ]]; then export LDFLAGS="$LDFLAGS -L${CLANG_39_PATH}/lib"                                            ;fi
  - mkdir build_$EASTL_CONFIG                                                                     
  - cd build_$EASTL_CONFIG                                                                        
  - cmake .. -DEASTL_BUILD_BENCHMARK:BOOL=ON -DEASTL_BUILD_TESTS:BOOL=ON                          
  - cmake --build . --config $EASTL_CONFIG                                                        

script:
  # Run Tests
  - cd $TRAVIS_BUILD_DIR/build_$EASTL_CONFIG/test          
  - ctest -C $EASTL_CONFIG -V || exit 1                    
  # Run Benchmarks
  - cd $TRAVIS_BUILD_DIR/build_$EASTL_CONFIG/benchmark     
  - ctest -C $EASTL_CONFIG -V || exit 1                    

branches:
  except:
    - gh-pages

cache:
  directories:
    - $HOME/.linuxbrew/
    - $HOME/.homebrew/
